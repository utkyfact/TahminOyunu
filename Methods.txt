MATH methodu
 Math.PI --> pı sayısı
 Math.round --> yuvarlıyor
 Math.floor --> aşağı yuvarlıyor
 Math.ceil --> yukarıya yuvarlıyor
 Math.min --> en küçük değeri döndürüyor
 Math.max --> en büyük değeri döndürüyor
 Math.random --> 0 ile 1 arasında bir sayı veriyor.
 Math.abs --> mutlak değeri
 Math.sqrt --> karekökünü alıyor
 Math.pow(x,y) --> üssünü alıyor(ilki sayı ikincisi üs)
 Math.log --> logaritmasını alıyor
 Math.sin --> sin alıyor
 Math.cos --> cos alıyor



STRİNG METHODS
.length --> kaç karakter uzunluğu olduğunu bildiriyor. boşlukta dahil
.xXxXx[değer] --> ulaşmak istediğimiz index değerine ulaşmak için kullanılır.
.toUpperCase() --> harfleri büyütür
.toLowerCase() --> harfleri küçültür
.substr() --> iki parametre alır. başlangıç indexi ve kaç karakter alınacağını bildiren index
.substring() --> iki parametre alır. başlangıç indexi ve bitiş indexi yazılır.
.slice() --> iki parametre alır. Başlangıçta indexi ve başlangıçtan itibaren toplam kaç harf gösterilecek son harf de dahil edilir eğer eski değer verilirse tersten başlar
.split() --> string ifadeyi istenilen şekilde bölmeye yarıyor ikinci bir parametre verilirse arrayde kaç eleman olacağı söyleniyor.
.trim() --> başlangıç ve sondaki boşlukları yok eder
.includes() --> içerip içermediği kontrol edilir boolean değer döner.
.replace() --> iki parametre alır ilkini ikincisiyle değiştirir.
.charAt(index) --> girilen index numarasındaki harfi gösterir
.charCodeAt(index) --> girilen harfin ASCII numarasını veriyor
.indexOf(değer) --> string olarak girilen harfin index numarasını gösterir iki tane varsa ilkini döner 
.lastIndexOf(değer) --> string olarak girilen harfin index numarasını gösterir ama aramaya sondan başlar
.concat(substring, substring, substring) --> string ifadeye değer eklemek için kullanılır
.startsWith(değer) --> string ifadedenin verdiğimiz değer ile başlayıp başlamadığını kontrol ediyor
.endsWith() --> string ifadedenin verdiğimiz değer ile bitip bitmediğini kontrol ediyor
.search() --> yazdığımız değer string ifadede hangi indexte onu buluyor
.match() --> yazdığımız değer ifadede eşleşiyor mu onu kontrol ediyor
.repeat() --> yazdığımız değeri tekrarlıyor

Number METHODS
.toString() --> metinsel ifadeye döndürür
.toFixed() --> parametre olarak sayı alır tam sayıdan(virgülden) sonra kaç tane ondalıklı kısım olacağını belirtir numarayı string ifadeye döndürür
.toPrecision() --> parametre olarak sayı alır ondalıklı kısım dahil toplamda kaç basamaktan oluşacağını belirtir



ARRAY METHODS
.push() --> parametre alır yeni elemanı arrayın sonuna ekler
.pop() --> parametre almaz sondaki elemanı kaldırır
.unshift() --> parametre alır ve yeni elemanı arrayin başına ekler
.shift() --> parametre almaz baştaki elemanı kaldırır
.reverse() --> parametre almaz arrayi ters çevirir
.slice() --> iki parametre alır. Başlangıç indexi ve bitiş indexi yazılır ve yeni array döndürür bitiş indexindeki eleman dahil edilmez
.splice() --> iki parametre alır. Başlangıç indexi ve o elemandan itibaren kaç eleman gidileceği söylenir yeni array döndürür bitiş elemanı dahildir
.fill() --> 3 parametre alır ilk parametre arayın içindeki elemanlar ne ile değişecek eğer başka parametre girilmezse arayın içindeki her şeyi değiştirir diğer 2 parametre sayıdır ilki başlangıç indexini belirtir ikincisi kaç eleman gidileceğini söyler sondaki eleman dahil edilmez diğer elemanlar aynı kalır arrayi modifiye eder yeni array döndürmez
.indexOf() --> parametre olarak girilen değerin index numarasını gösterir
.join() girilen değere göre array elemanlarını string haline getirir
.includes() girilen değer arrayde var mı yok mu diye bakar boolean değer döner
.concat() string ifadedeki gibi iki arrayi birleştirir tek array yapar

VERİ TİPİ KONTROLU VE DEĞİŞTİRİLMESİ

typeof -> veri türünü öğrenmek için kullanılır
STR TO İNT
parseInt()
Number()
artı eklemek(+)


STR TO FLOAT
parseFloat()
Number()
artı eklemek (+)

FLOAT TO İNT
parseInt()

// Karşılaştırma operatörleri
//  ==  türlerine bakmaksızın eşitmidir
//  === türlerinide karşılaştırarak eşitmidir
//  !=  eşit değildir
//  <   küçüktür
//  <=  küçük eşittir
//  >   büyüktür
//  >=  büyük eşittir


// Logical operators(mantıksal operator)
//  && ve 
//  || yada
//  ! olumsuzlama     !true == false (gibi kullanılıyor)
